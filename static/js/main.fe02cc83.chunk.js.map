{"version":3,"sources":["Components/DotaApi.js","Components/HeroList.js","App.js","index.js"],"names":["DotaComponent","props","state","topPlayers","heroDetails","hero","LaneRoles","this","setState","className","name","localized_name","heroInfo","attr","attrImg","src","attribute","primary_attr","attack_type","roles","join","legs","lowerCaseName","replace","split","toLowerCase","length","url","heroPicture","players","heroName","rankings","id","personaname","showTopPlayers","React","Component","HeroList","_isMounted","hasGotTopPlayers","heroes","fetch","then","response","json","sort","a","b","textA","toUpperCase","textB","catch","err","console","log","getHeroData","getTopPlayers","heroNames","map","item","key","onClick","GetId","bind","CenteredGrid","selectedHero","DotaApi","find","x","HeroId","App","ReactDOM","render","document","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.fe02cc83.chunk.js","sourcesContent":["import React, {} from 'react';\r\n\r\n\r\nclass DotaComponent extends React.Component {  \r\n    constructor(props){\r\n    super(props);   \r\n    this.state = {        \r\n        topPlayers: props.topPlayers,\r\n        heroDetails: props.hero,\r\n        LaneRoles: []\r\n    };\r\n}\r\n\r\ncomponentWillReceiveProps(props){\r\n    this.setState({ heroDetails: props.hero })\r\n    this.setState({ topPlayers: props.topPlayers })    \r\n}\r\n\r\nrender() {    \r\n    return (\r\n        <div className=\"grid-container\">\r\n            <div className=\"grid-item-hero\"> { heroName(this.state.heroDetails) } { heroInformation(this.state.heroDetails) } { heroPicture(this.state.heroDetails.name) } </div>\r\n            <div className=\"grid-item-player\"> { showTopPlayers(this.state.topPlayers, this.state.heroDetails) } </div>                                                                                                                                    \r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default DotaComponent;\r\n\r\nfunction heroName(name) {\r\n    return <label className=\"hero-title\">{ name.localized_name }</label>\r\n}\r\n    \r\nfunction attribute(attr) {\r\n    var attrImg = '';\r\n\r\n    if(attr === \"agi\")\r\n    {\r\n        attr = \"Agility\";\r\n        attrImg = \"http://media.steampowered.com/apps/dota2/images/heropedia/overviewicon_agi.png\";\r\n    }\r\n    else if(attr === \"str\")\r\n    {\r\n        attr = \"Strength\"\r\n        attrImg = \"http://media.steampowered.com/apps/dota2/images/heropedia/overviewicon_str.png\";\r\n    }\r\n    else\r\n    {\r\n        attr = \"Intelligence\"\r\n        attrImg = \"http://media.steampowered.com/apps/dota2/images/heropedia/overviewicon_int.png\";\r\n    }\r\n    return <label><u>Primary Attribute</u> <p />{ attr }<p /> <img src={ attrImg } /></label>\r\n}\r\n\r\nfunction heroPicture(name) {\r\n\r\n    const normalName = name.replace('npc_dota_hero_', '');\r\n    const lowerCaseName = normalName.split(' ').join('_').toLowerCase();    \r\n\r\n    if(name.length > 0){\r\n        const url = \"http://cdn.dota2.com/apps/dota2/images/heroes/\" +  lowerCaseName  + \"_vert.jpg\";\r\n\r\n    return  <div>\r\n                <img src={ url } /> \r\n            </div>\r\n    }\r\n}\r\n\r\nfunction heroInformation(heroInfo) {        \r\n    return(        \r\n        <div className=\"hero-text\">\r\n            { attribute(heroInfo.primary_attr) }<p />   \r\n            <label><u>Attack Type</u></label><p /> { heroInfo.attack_type }<p />             \r\n            <label><u>Roles </u></label><p /> { heroInfo.roles.join(\", \") }<p />         \r\n            <label><u>Legs </u></label><p /> { heroInfo.legs }<p />            \r\n        </div>                     \r\n    );\r\n}\r\n\r\nfunction showTopPlayers(players, heroName) {   \r\n    if(players && players.rankings && players.rankings.length > 0) {\r\n    return(\r\n        <table>\r\n            <thead>\r\n            <tr className=\"player-text\">\r\n                <th>Current Top 5 { heroName.localized_name } Players </th>     \r\n            </tr> \r\n            </thead>\r\n            <tbody>\r\n            <tr>\r\n                <th id=\"first\"> \r\n                    { players.rankings[0].personaname }\r\n                </th>\r\n            </tr> \r\n            <tr>\r\n                <th id=\"second\"> \r\n                    { players.rankings[1].personaname }\r\n                </th>\r\n            </tr> \r\n            <tr>\r\n                <th id=\"third\"> \r\n                    { players.rankings[2].personaname }\r\n                </th>\r\n            </tr> \r\n            <tr>\r\n                <th> \r\n                    { players.rankings[3].personaname }\r\n                </th>\r\n            </tr> \r\n            <tr>\r\n                <th> \r\n                    { players.rankings[4].personaname }\r\n                </th>\r\n            </tr>\r\n            </tbody>\r\n        </table>\r\n    )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, {} from 'react';\r\nimport DotaApi from './DotaApi';\r\n\r\nclass HeroList extends React.Component\r\n{\r\n    _isMounted = false;\r\n  \r\n\r\n    constructor(props){\r\n        super(props);    \r\n        this.state = {\r\n            hasGotTopPlayers: false,\r\n            heroes: [],\r\n            id: -1,\r\n            topPlayers: []\r\n        };    \r\n}\r\n  \r\ngetHeroData() {\r\n    fetch(\"https://api.opendota.com/api/heroes?api_key=B05481EB573059BDB0136454432E27F6\", {\r\n        \"method\": \"GET\"\r\n        }\r\n    )\r\n    .then(response => response.json())    \r\n    .then(response => {        \r\n        SortList(response);\r\n        if (this._isMounted) {\r\n            this.setState({             \r\n                heroes: response\r\n            })\r\n        }\r\n    })\r\n    .catch(err => {console.log(err);\r\n    });    \r\n}\r\n\r\ngetTopPlayers(id) {\r\n    this.state.hasGotTopPlayers = false;\r\n    \r\n    fetch(\"https://api.opendota.com/api/rankings?hero_id=\" + id, {\r\n        \"method\": \"GET\"\r\n        }\r\n    )\r\n    .then(response => response.json())\r\n    .then(response => {\r\n        if(this._isMounted) {\r\n            this.setState({             \r\n                topPlayers: response,\r\n                hasGotTopPlayers: true\r\n            })            \r\n        }\r\n    })\r\n    .catch(err => {console.log(err)\r\n    });\r\n}\r\n\r\ncomponentDidMount(){\r\n    this._isMounted = true;\r\n    this.getHeroData();    \r\n    this.getTopPlayers();\r\n}\r\n\r\ncomponentWillUnmount(){\r\n    this._isMounted = false;\r\n}\r\n\r\nGetId(id){\r\n    this.setState({\r\n        id: id\r\n    })  \r\n    this.getTopPlayers(id);   \r\n}\r\n\r\nrender() {      \r\n    const heroNames = this.state.heroes.map((item, key) => <button className=\"btn-groups\" onClick={ this.GetId.bind(this, item.id) } key={item.id}>{item.localized_name}</button>);\r\n       \r\n    return (      \r\n        <div>\r\n            <div className=\"banner\">\r\n                <h1>Dota 2 Hero Information</h1>\r\n            </div>\r\n            <div className = \"main-display\">\r\n                <div>\r\n                    { CenteredGrid(heroNames) }\r\n                </div> \r\n                { this.showTopPlayers() }                      \r\n            </div>\r\n        </div> \r\n        );\r\n    }  \r\n\r\n    showTopPlayers() {\r\n        if(this.state.hasGotTopPlayers) { \r\n            return <div>{ HeroId(this.state.heroes, this.state.id, this.state.topPlayers) }</div>\r\n        }\r\n        else {\r\n            return <div className=\"loader\"></div>\r\n        }\r\n    }\r\n}\r\n\r\nexport default HeroList;\r\n\r\nfunction CenteredGrid(heroNames) {\r\n    return (    \r\n        [ heroNames ]                                        \r\n    )\r\n}\r\n\r\nfunction HeroId(selectedHero, id, players){\r\n    if(id !== -1)\r\n    {                \r\n        return <DotaApi hero = { selectedHero.find(x => x.id === id) } topPlayers = { players }  />\r\n    }\r\n}\r\n\r\nfunction SortList(heroNameArray){\r\n    heroNameArray.sort(function(a, b) {\r\n        var textA = a.localized_name.toUpperCase();\r\n        var textB = b.localized_name.toUpperCase();\r\n        return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n    });\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport HeroList from './Components/HeroList';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass App extends React.Component {    \r\n  \r\n  render() {\r\n    return (\r\n    <div>            \r\n      <div className=\"dota-hero-app\">                                                                 \r\n        <HeroList />                         \r\n      </div>       \r\n    </div>    \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nReactDOM.render(  \n  <React.StrictMode>    \n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}