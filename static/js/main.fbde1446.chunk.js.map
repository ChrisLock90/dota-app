{"version":3,"sources":["Components/DotaApi.js","Components/HeroList.js","App.js","index.js"],"names":["DotaComponent","props","state","topPlayers","heroDetails","hero","LaneRoles","this","setState","className","name","localized_name","heroInfo","primary_attr","attack_type","roles","legs","players","heroName","rankings","length","personaname","showTopPlayers","React","Component","HeroList","_isMounted","hasGotTopPlayers","heroes","id","fetch","then","response","json","sort","a","b","textA","toUpperCase","textB","catch","err","console","log","getHeroData","getTopPlayers","heroNames","map","item","key","onClick","GetId","bind","CenteredGrid","selectedHero","DotaApi","find","x","HeroId","App","ReactDOM","render","document","getElementById","StrictMode"],"mappings":"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","file":"static/js/main.fbde1446.chunk.js","sourcesContent":["import React, {} from 'react';\r\n\r\n\r\nclass DotaComponent extends React.Component {  \r\n    constructor(props){\r\n    super(props);   \r\n    this.state = {        \r\n        topPlayers: props.topPlayers,\r\n        heroDetails: props.hero,\r\n        LaneRoles: []\r\n    };\r\n}\r\n\r\ncomponentWillReceiveProps(props){\r\n    this.setState({ heroDetails: props.hero })\r\n    this.setState({ topPlayers: props.topPlayers })    \r\n}\r\n\r\nrender() {    \r\n    return (\r\n        <div className=\"grid-container\">\r\n            <div className=\"grid-item-hero\"> { heroName(this.state.heroDetails) } { heroInformation(this.state.heroDetails) } </div>\r\n            <div className=\"grid-item-player\"> { showTopPlayers(this.state.topPlayers, this.state.heroDetails) } </div>                                                                                                                                    \r\n        </div>\r\n    );\r\n}\r\n}\r\n\r\nexport default DotaComponent;\r\n\r\nfunction heroName(name) {\r\n    return <label>{ name.localized_name } Information</label>\r\n}\r\n    \r\nfunction heroInformation(heroInfo) { \r\n    return(\r\n        <div className=\"hero-text\">\r\n            <label>Primary Attribute: </label>{ heroInfo.primary_attr }<p />             \r\n            <label>Attack Type: </label>{ heroInfo.attack_type }<p />             \r\n            <label>Roles: </label>{ heroInfo.roles }<p />         \r\n            <label>Legs: </label>{ heroInfo.legs }<p />\r\n        </div>        \r\n    );\r\n}\r\n\r\nfunction showTopPlayers(players, heroName) {   \r\n    if(players && players.rankings && players.rankings.length > 0) {\r\n    return(\r\n        <div className=\"player-text\">\r\n            <label>Current Top 5 { heroName.localized_name } Players </label><p /> \r\n            <label>1. { players.rankings[0].personaname }</label>\r\n            <label>2. { players.rankings[1].personaname }</label>\r\n            <label>3. { players.rankings[2].personaname }</label>\r\n            <label>4. { players.rankings[3].personaname }</label>\r\n            <label>5. { players.rankings[4].personaname }</label>\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\n\r\n\r\n","import React, {} from 'react';\r\nimport DotaApi from './DotaApi';\r\n\r\nclass HeroList extends React.Component\r\n{\r\n    _isMounted = false;\r\n  \r\n\r\n    constructor(props){\r\n        super(props);    \r\n        this.state = {\r\n            hasGotTopPlayers: false,\r\n            heroes: [],\r\n            id: -1,\r\n            topPlayers: []\r\n        };    \r\n}\r\n  \r\ngetHeroData() {\r\n    fetch(\"https://api.opendota.com/api/heroes?api_key=B05481EB573059BDB0136454432E27F6\", {\r\n        \"method\": \"GET\"\r\n        }\r\n    )\r\n    .then(response => response.json())    \r\n    .then(response => {        \r\n        SortList(response);\r\n        if (this._isMounted) {\r\n            this.setState({             \r\n                heroes: response\r\n            })\r\n        }\r\n    })\r\n    .catch(err => {console.log(err);\r\n    });    \r\n}\r\n\r\ngetTopPlayers(id) {\r\n    this.state.hasGotTopPlayers = false;\r\n    \r\n    fetch(\"https://api.opendota.com/api/rankings?hero_id=\" + id, {\r\n        \"method\": \"GET\"\r\n        }\r\n    )\r\n    .then(response => response.json())\r\n    .then(response => {\r\n        if(this._isMounted) {\r\n            this.setState({             \r\n                topPlayers: response,\r\n                hasGotTopPlayers: true\r\n            })            \r\n        }\r\n    })\r\n    .catch(err => {console.log(err)\r\n    });\r\n}\r\n\r\ncomponentDidMount(){\r\n    this._isMounted = true;\r\n    this.getHeroData();    \r\n    this.getTopPlayers();\r\n}\r\n\r\ncomponentWillUnmount(){\r\n    this._isMounted = false;\r\n}\r\n\r\nGetId(id){\r\n    this.setState({\r\n        id: id\r\n    })  \r\n    this.getTopPlayers(id);   \r\n}\r\n\r\nrender() {    \r\n\r\n    const heroNames = this.state.heroes.map((item, key) => <button className=\"btn-groups\" onClick={ this.GetId.bind(this, item.id) } key={item.id}>{item.localized_name}</button>);\r\n       \r\n    return (       \r\n        <div className = \"main-display\">\r\n            <div>{ CenteredGrid(heroNames) }</div> \r\n            { this.showTopPlayers() }                      \r\n        </div>\r\n        );\r\n    }  \r\n\r\n    showTopPlayers() {\r\n        if(this.state.hasGotTopPlayers) { \r\n            return <div>{ HeroId(this.state.heroes, this.state.id, this.state.topPlayers) }</div>\r\n        }\r\n        else {\r\n            return <div className=\"loader\"></div>\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default HeroList;\r\n\r\nfunction CenteredGrid(heroNames) {\r\n    return (    \r\n        [ heroNames ]                                        \r\n    )\r\n}\r\n\r\n\r\n\r\nfunction HeroId(selectedHero, id, players){\r\n    if(id !== -1)\r\n    {                \r\n        return <DotaApi hero = { selectedHero.find(x => x.id === id) } topPlayers = { players }  />\r\n    }\r\n}\r\n\r\nfunction SortList(heroNameArray){\r\n    heroNameArray.sort(function(a, b) {\r\n        var textA = a.localized_name.toUpperCase();\r\n        var textB = b.localized_name.toUpperCase();\r\n        return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\r\n    });\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport HeroList from './Components/HeroList';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass App extends React.Component {    \r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"Dota 2 Hero App\">\r\n        <div>                                                               \r\n          <div><HeroList /></div>          \r\n        </div>           \r\n      </div>        \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}